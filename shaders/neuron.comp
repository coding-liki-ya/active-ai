#version 430
layout(local_size_x = 64) in;

layout(std430, binding = 0) buffer NeuronEnergy {
    float energy[];
};
layout(std430, binding = 1) buffer Threshold {
    float threshold[];
};
layout(std430, binding = 2) buffer TypeBuf {
    int type[]; // 0 input,1 excitatory,2 inhibitory,3 output
};
layout(std430, binding = 3) buffer ConnFrom {
    int from[];
};
layout(std430, binding = 4) buffer ConnTo {
    int to[];
};
layout(std430, binding = 5) buffer ConnWeight {
    float weight[];
};

uniform int connectionCount;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if(idx >= connectionCount) return;
    int f = from[idx];
    int t = to[idx];
    float w = weight[idx];
    float e = energy[f];
    if(e >= threshold[f]) {
        float send = e * w;
        atomicAdd(energy[f], -send);
        if(type[f] == 2) send *= -1.0; // inhibitory
        atomicAdd(energy[t], send);
    }
}
